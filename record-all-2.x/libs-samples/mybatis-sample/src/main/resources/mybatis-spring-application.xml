<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">
    <context:property-placeholder location="config.properties"/>
    <context:component-scan base-package="com.krista.mybatis.sample.service"/>
    <context:component-scan base-package="com.krista.mybatis.sample.multidatasource"/>
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!-- 多数据源 -->
    <bean id="dataSource" class="com.krista.mybatis.sample.multidatasource.DynamicDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry value-ref="readDataSource" key="read"></entry>
                <entry value-ref="writeDataSource" key="write"></entry>
            </map>
        </property>
        <!-- 默认使用read的数据源 -->
        <property name="defaultTargetDataSource" ref="readDataSource"></property>
    </bean>

    <!-- 读数据库连接池 -->
    <bean id="readDataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.mysql.driverClass}"/>
        <property name="password" value="${jdbc.mysql.password}"/>
        <property name="username" value="${jdbc.mysql.user}"/>
        <property name="url" value="${jdbc.mysql.url}"/>
        <property name="initialSize" value="0"/>
        <property name="maxActive" value="20"/>
        <property name="minIdle" value="0"/>
        <property name="maxWait" value="6000"/>
    </bean>

    <!-- 读数据库连接池 -->
    <bean id="writeDataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.mysql.driverClass}"/>
        <property name="password" value="${jdbc.mysql.password}"/>
        <property name="username" value="${jdbc.mysql.user}"/>
        <property name="url" value="${jdbc.mysql.url}"/>
        <property name="initialSize" value="0"/>
        <property name="maxActive" value="20"/>
        <property name="minIdle" value="0"/>
        <property name="maxWait" value="6000"/>
    </bean>

    <!-- sqlSession Factory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="mybatis-config.xml"/>
    </bean>

    <!-- mapper扫描，集成了通用mapper -->
    <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.krista.mybatis.sample.mapper"/>
        <property name="markerInterface" value="com.krista.extend.mybatis.KristaMapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!-- 事务管理 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:annotation-driven transaction-manager="txManager"/>
</beans>